(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[404],{2322:function(e,n,r){Promise.resolve().then(r.bind(r,6391))},9205:function(e,n,r){"use strict";r.d(n,{Z:function(){return s}});var t=r(2265);let a=e=>e.replace(/([a-z0-9])([A-Z])/g,"$1-$2").toLowerCase(),i=function(){for(var e=arguments.length,n=Array(e),r=0;r<e;r++)n[r]=arguments[r];return n.filter((e,n,r)=>!!e&&r.indexOf(e)===n).join(" ")};var o={xmlns:"http://www.w3.org/2000/svg",width:24,height:24,viewBox:"0 0 24 24",fill:"none",stroke:"currentColor",strokeWidth:2,strokeLinecap:"round",strokeLinejoin:"round"};let l=(0,t.forwardRef)((e,n)=>{let{color:r="currentColor",size:a=24,strokeWidth:l=2,absoluteStrokeWidth:s,className:c="",children:d,iconNode:h,...u}=e;return(0,t.createElement)("svg",{ref:n,...o,width:a,height:a,stroke:r,strokeWidth:s?24*Number(l)/Number(a):l,className:i("lucide",c),...u},[...h.map(e=>{let[n,r]=e;return(0,t.createElement)(n,r)}),...Array.isArray(d)?d:[d]])}),s=(e,n)=>{let r=(0,t.forwardRef)((r,o)=>{let{className:s,...c}=r;return(0,t.createElement)(l,{ref:o,iconNode:n,className:i("lucide-".concat(a(e)),s),...c})});return r.displayName="".concat(e),r}},407:function(e,n,r){"use strict";r.d(n,{Z:function(){return t}});let t=(0,r(9205).Z)("ChevronRight",[["path",{d:"m9 18 6-6-6-6",key:"mthhwq"}]])},9376:function(e,n,r){"use strict";var t=r(5475);r.o(t,"usePathname")&&r.d(n,{usePathname:function(){return t.usePathname}}),r.o(t,"useSearchParams")&&r.d(n,{useSearchParams:function(){return t.useSearchParams}})},6391:function(e,n,r){"use strict";r.r(n),r.d(n,{default:function(){return N}});var t=r(7437),a=r(2265),i=JSON.parse('[{"slug":"blog/argo-terraform-integration","title":"Integrating GitOps and IaC using ArgoCD and Terraform","description":"Solution architecture, which should enable us to integrate ArgoCD GitOps based deployment of microservices with Terraform together.","date":"2025-02-16T00:00:00.000Z","published":true,"tags":["code","blog","gitops","argocd","terraform"],"body":"const{Fragment:e,jsx:n,jsxs:r}=arguments[0];function _createMdxContent(t){const i={a:\\"a\\",br:\\"br\\",h1:\\"h1\\",h2:\\"h2\\",h3:\\"h3\\",h4:\\"h4\\",li:\\"li\\",p:\\"p\\",strong:\\"strong\\",ul:\\"ul\\",...t.components},{ZoomableImage:a}=i;return a||function(e,n){throw new Error(\\"Expected \\"+(n?\\"component\\":\\"object\\")+\\" `\\"+e+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}(\\"ZoomableImage\\",!0),r(e,{children:[n(i.h1,{id:\\"integrating-gitops-and-infrastructure-as-code-with-terraform-and-argocd\\",children:n(i.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#integrating-gitops-and-infrastructure-as-code-with-terraform-and-argocd\\",children:n(i.strong,{children:\\"Integrating GitOps and Infrastructure as Code with Terraform and ArgoCD\\"})})}),\\"\\\\n\\",n(\\"br\\",{}),\\"\\\\n\\",r(i.p,{children:[\\"This solution architecture aims to bridge the gap between \\",n(i.strong,{children:\\"GitOps-based deployments and Infrastructure as Code (IaC)\\"}),\\" by incorporating Terraform for handling \\",n(i.strong,{children:\\"database schema migrations\\"}),\\" and managing cloud resources effectively. Since microservices often rely on databases to function properly, it is crucial to ensure that the database layer is provisioned and updated correctly before the application deployment begins. Using a combination of \\",n(i.strong,{children:\\"Terraform, GitLab, Vault, and ArgoCD\\"}),\\", we can streamline the process while enforcing security best practices.\\"]}),\\"\\\\n\\",n(\\"br\\",{}),\\"\\\\n\\",n(a,{src:\\"/terraform_argo_arch_diagram.png\\"}),\\"\\\\n\\",n(i.h3,{id:\\"why-use-terraform-for-infrastructure-and-database-management\\",children:n(i.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#why-use-terraform-for-infrastructure-and-database-management\\",children:n(i.strong,{children:\\"Why Use Terraform for Infrastructure and Database Management?\\"})})}),\\"\\\\n\\",n(i.p,{children:\\"Infrastructure-as-Code (IaC) has become the backbone of modern cloud deployment strategies, offering automation, consistency, and version control. Terraform allows us to define infrastructure declaratively, reducing manual intervention and potential human errors. For our use case, Terraform plays a vital role in:\\"}),\\"\\\\n\\",n(\\"br\\",{}),\\"\\\\n\\",r(i.ul,{children:[\\"\\\\n\\",r(i.li,{children:[\\"Storing and managing \\",n(i.strong,{children:\\"SQL migration scripts\\"}),\\" within a GitLab repository, enabling version-controlled database updates.\\"]}),\\"\\\\n\\",r(i.li,{children:[\\"Automating the creation and configuration of \\",n(i.strong,{children:\\"database schemas, users, and role-based access controls\\"}),\\", ensuring that applications have the correct permissions.\\"]}),\\"\\\\n\\",r(i.li,{children:[\\"Integrating with \\",n(i.strong,{children:\\"HashiCorp Vault\\"}),\\" to securely store and retrieve \\",n(i.strong,{children:\\"database credentials\\"}),\\", reducing exposure and enhancing security.\\"]}),\\"\\\\n\\",r(i.li,{children:[\\"Committing necessary infrastructure configurations, such as \\",n(i.strong,{children:\\"Helm values and Kustomize overlays\\"}),\\", into a Git repository where ArgoCD can monitor changes and automatically synchronize environments.\\"]}),\\"\\\\n\\"]}),\\"\\\\n\\",n(\\"br\\",{}),\\"\\\\n\\",n(i.p,{children:\\"With this approach, we ensure that database migrations and infrastructure provisioning are tightly coupled with the application deployment process, reducing inconsistencies and deployment failures.\\"}),\\"\\\\n\\",n(\\"br\\",{}),\\"\\\\n\\",n(i.h2,{id:\\"cicd-pipeline-with-gitlab-and-tekton-automating-deployments-from-code-to-production\\",children:n(i.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#cicd-pipeline-with-gitlab-and-tekton-automating-deployments-from-code-to-production\\",children:n(i.strong,{children:\\"CI/CD Pipeline with GitLab and Tekton: Automating Deployments from Code to Production\\"})})}),\\"\\\\n\\",n(\\"br\\",{}),\\"\\\\n\\",r(i.p,{children:[\\"Every time a \\",n(i.strong,{children:\\"developer pushes code to GitLab\\"}),\\" or submits a \\",n(i.strong,{children:\\"merge request\\"}),\\", the pipeline is automatically triggered, ensuring that all infrastructure and application changes are validated before being deployed.\\"]}),\\"\\\\n\\",n(\\"br\\",{}),\\"\\\\n\\",n(i.h4,{id:\\"pipeline-stages\\",children:n(i.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#pipeline-stages\\",children:n(i.strong,{children:\\"Pipeline Stages:\\"})})}),\\"\\\\n\\",n(\\"br\\",{}),\\"\\\\n\\",r(i.p,{children:[n(i.strong,{children:\\"1. Lint & Validate:\\"}),\\" The pipeline runs static code analysis, Terraform validation, and schema checks to enforce best practices before execution.\\"]}),\\"\\\\n\\",r(i.p,{children:[n(i.strong,{children:\\"2. Build & Push Container:\\"}),\\" Tekton builds a container image for the microservice and pushes it to a container registry, ensuring that the latest version is ready for deployment.\\"]}),\\"\\\\n\\",r(i.p,{children:[n(i.strong,{children:\\"3. Database Migration Execution:\\"}),\\" The pipeline retrieves the database credentials securely from Vault and executes SQL migration scripts using \\",n(i.strong,{children:\\"Liquibase\\"}),\\", ensuring that the database schema is up to date before deploying the application.\\"]}),\\"\\\\n\\",r(i.p,{children:[n(i.strong,{children:\\"4. Terraform Apply:\\"}),\\" Terraform applies any required infrastructure updates, keeping the cloud environment consistent with the defined state. If Terraform detects configuration changes, it automatically opens a pull request (PR) for review, ensuring that changes are tracked and approved before being applied.\\"]}),\\"\\\\n\\",n(\\"br\\",{}),\\"\\\\n\\",n(i.p,{children:\\"By automating these processes, we significantly reduce the risk of deployment failures caused by manual errors or misconfigurations.\\"}),\\"\\\\n\\",n(\\"br\\",{}),\\"\\\\n\\",n(i.h3,{id:\\"ensuring-stability-with-automated-testing-and-observability\\",children:n(i.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#ensuring-stability-with-automated-testing-and-observability\\",children:n(i.strong,{children:\\"Ensuring Stability with Automated Testing and Observability\\"})})}),\\"\\\\n\\",n(\\"br\\",{}),\\"\\\\n\\",n(i.p,{children:\\"Once the application is deployed, it is critical to validate its functionality and monitor its performance. Our solution incorporates several strategies to achieve this:\\"}),\\"\\\\n\\",r(i.ul,{children:[\\"\\\\n\\",r(i.li,{children:[n(i.strong,{children:\\"Automated Health Checks & Integration Tests:\\"}),\\" After deployment, \\",n(i.strong,{children:\\"ArgoCD\\"}),\\" runs a suite of sync hooks health checks and integration tests to confirm that the application is functioning as expected.\\"]}),\\"\\\\n\\",r(i.li,{children:[n(i.strong,{children:\\"Comprehensive Monitoring & Logging:\\"}),\\" Tools like \\",n(i.strong,{children:\\"Prometheus and Grafana\\"}),\\" provide real-time visibility into application performance, while OpenShift’s built-in logging capabilities help troubleshoot issues quickly.\\"]}),\\"\\\\n\\",r(i.li,{children:[n(i.strong,{children:\\"Instant Rollbacks:\\"}),\\" If a deployment issue arises, ArgoCD enables teams to \\",n(i.strong,{children:\\"revert to the previous stable Git commit\\"}),\\", ensuring minimal downtime and a quick recovery process.\\"]}),\\"\\\\n\\"]}),\\"\\\\n\\",n(\\"br\\",{}),\\"\\\\n\\",n(i.p,{children:\\"This approach offers several benefits:\\"}),\\"\\\\n\\",r(i.p,{children:[\\"✅ \\",n(i.strong,{children:\\"Automated, version-controlled infrastructure provisioning\\"}),\\" eliminates manual setup errors.\\",n(i.br,{}),\\"\\\\n\\",\\"✅ \\",n(i.strong,{children:\\"Secure database migrations\\"}),\\" ensure consistency and data integrity.\\",n(i.br,{}),\\"\\\\n\\",\\"✅ \\",n(i.strong,{children:\\"Seamless, rollback-ready microservices deployments\\"}),\\" improve resilience.\\",n(i.br,{}),\\"\\\\n\\",\\"✅ \\",n(i.strong,{children:\\"Enhanced observability and security\\"}),\\" help teams monitor and manage applications effectively.\\"]})]})}return{default:function(e={}){const{wrapper:r}=e.components||{};return r?n(r,{...e,children:n(_createMdxContent,{...e})}):_createMdxContent(e)}};","slugAsParams":"argo-terraform-integration"},{"slug":"blog/automating-delivery-docu-gen","title":"Automating delivery documentation using Python","description":"Automate your delivery documentation for your customer via simple scripting in Python","date":"2025-02-28T00:00:00.000Z","published":true,"tags":["code","blog","delivery","cd","automation"],"body":"const{Fragment:e,jsx:n,jsxs:i}=arguments[0];function _createMdxContent(r){const t={a:\\"a\\",br:\\"br\\",code:\\"code\\",figure:\\"figure\\",h2:\\"h2\\",h3:\\"h3\\",hr:\\"hr\\",li:\\"li\\",ol:\\"ol\\",p:\\"p\\",pre:\\"pre\\",span:\\"span\\",strong:\\"strong\\",table:\\"table\\",tbody:\\"tbody\\",td:\\"td\\",th:\\"th\\",thead:\\"thead\\",tr:\\"tr\\",ul:\\"ul\\",...r.components};return i(e,{children:[n(t.p,{children:\\"In today\'s fast-paced software development landscape, maintaining clear and detailed delivery documentation is essential for ensuring smooth integrations and ongoing communication between development teams and integrators. In this blog post, we explore how a Python script can automate the creation of delivery documentation for microservices and manages release archiving in Jira. Following script content should serve only as an inspiration for you as your project can have different needs.\\"}),\\"\\\\n\\",n(\\"br\\",{}),\\"\\\\n\\",n(t.h2,{id:\\"overview\\",children:n(t.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#overview\\",children:n(t.strong,{children:\\"Overview\\"})})}),\\"\\\\n\\",n(t.p,{children:\\"At the end of your sprint you should have meeting, where your team is deciding, which microservices should be delivered to customer. Based on this meeting every microservice owner will run delivery CI pipeline, which will create Jira release automatically will all necessary metadata for your delivery documentation.\\"}),\\"\\\\n\\",n(\\"br\\",{}),\\"\\\\n\\",n(t.p,{children:\\"With our Python script we can achieve:\\"}),\\"\\\\n\\",n(\\"br\\",{}),\\"\\\\n\\",i(t.ol,{children:[\\"\\\\n\\",n(t.li,{children:\\"Markdown file that documents the microservices delivered in a release. This documentation makes it easier to read about microservices changes to integrate them into target environment faster.\\"}),\\"\\\\n\\",n(t.li,{children:\\"Once documentation is generated, the script updates Jira releases by archiving the versions that have been delivered. This helps keep the release board up to date and free from clutter.\\"}),\\"\\\\n\\"]}),\\"\\\\n\\",n(\\"br\\",{}),\\"\\\\n\\",n(t.h3,{id:\\"automated-documentation-generation\\",children:n(t.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#automated-documentation-generation\\",children:n(t.strong,{children:\\"Automated Documentation Generation\\"})})}),\\"\\\\n\\",n(t.p,{children:\\"Let\'s see first, what we are tring to build:\\"}),\\"\\\\n\\",n(t.hr,{}),\\"\\\\n\\",i(t.table,{children:[n(t.thead,{children:i(t.tr,{children:[n(t.th,{children:\\"Microservice\\"}),n(t.th,{children:\\"Group\\"}),n(t.th,{children:\\"Version\\"}),n(t.th,{children:\\"Connected story\\"}),n(t.th,{children:\\"Change Log\\"}),n(t.th,{children:\\"README changed\\"})]})}),i(t.tbody,{children:[i(t.tr,{children:[n(t.td,{children:\\"Microservice A\\"}),n(t.td,{children:\\"Core\\"}),n(t.td,{children:\\"1.0.8\\"}),n(t.td,{children:\\"Story XYZ-Related to user preferences and performance testing.\\"}),n(t.td,{children:\\"feat: XYZ performance testing\\"}),n(t.td,{children:\\"Yes\\"})]}),i(t.tr,{children:[n(t.td,{children:\\"Microservice B\\"}),n(t.td,{children:\\"Entity\\"}),n(t.td,{children:\\"2.1.0\\"}),n(t.td,{children:\\"Story ABC-Related to validation fixing issue.\\"}),n(t.td,{children:\\"feat: ABC validation fixing\\"}),n(t.td,{children:\\"No\\"})]}),i(t.tr,{children:[n(t.td,{children:\\"Microservice C\\"}),n(t.td,{children:\\"Entity\\"}),n(t.td,{children:\\"0.1.0\\"}),n(t.td,{children:\\"Story ABC-Related to validation fixing issue.\\"}),n(t.td,{children:\\"feat: ABC validation fixing\\"}),n(t.td,{children:\\"No\\"})]})]})]}),\\"\\\\n\\",n(t.hr,{}),\\"\\\\n\\",i(t.ul,{children:[\\"\\\\n\\",i(t.li,{children:[n(t.strong,{children:\\"Structured Markdown Output:\\"}),n(t.br,{}),\\"\\\\n\\",\\"The generated markdown document contains a well-organized table that lists:\\",\\"\\\\n\\",i(t.ul,{children:[\\"\\\\n\\",i(t.li,{children:[n(t.strong,{children:\\"Microservice:\\"}),\\" The name derived from the version string.\\"]}),\\"\\\\n\\",i(t.li,{children:[n(t.strong,{children:\\"Group:\\"}),\\" Based on the GitLab project structure.\\"]}),\\"\\\\n\\",i(t.li,{children:[n(t.strong,{children:\\"Version:\\"}),\\" Parsed from the version string stored in GitLab tag.\\"]}),\\"\\\\n\\",i(t.li,{children:[n(t.strong,{children:\\"Connected Story:\\"}),\\" Summaries of associated user-stories (with a special format if the summary starts with a 4-digit number in brackets).\\"]}),\\"\\\\n\\",i(t.li,{children:[n(t.strong,{children:\\"Change Log:\\"}),\\" Commit messages categorized by severity (MAJOR, MINOR, PATCH, and NOT CLASSIFIED) after removing prefixes and JIRA task references.\\"]}),\\"\\\\n\\",i(t.li,{children:[n(t.strong,{children:\\"README Changed:\\"}),\\" A flag indicating whether the \\",n(t.code,{children:\\"README.md\\"}),\\" file was updated since the last tag.\\"]}),\\"\\\\n\\"]}),\\"\\\\n\\"]}),\\"\\\\n\\"]}),\\"\\\\n\\",n(\\"br\\",{}),\\"\\\\n\\",n(t.h2,{id:\\"how-it-works\\",children:n(t.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#how-it-works\\",children:n(t.strong,{children:\\"How It Works\\"})})}),\\"\\\\n\\",i(t.ol,{children:[\\"\\\\n\\",i(t.li,{children:[\\"\\\\n\\",i(t.p,{children:[n(t.strong,{children:\\"Fetching Versions and Filtering:\\"}),n(t.br,{}),\\"\\\\n\\",\\"The script starts by querying Jira for project versions, filtering out any that are either archived or not recently released.\\"]}),\\"\\\\n\\"]}),\\"\\\\n\\",i(t.li,{children:[\\"\\\\n\\",i(t.p,{children:[n(t.strong,{children:\\"Analyzing GitLab Projects:\\"}),n(t.br,{}),\\"\\\\n\\",\\"It then fetches GitLab projects recursively to match microservice names, analyze commit history, and check for changes in key files like \\",n(t.code,{children:\\"README.md\\"}),\\".\\"]}),\\"\\\\n\\"]}),\\"\\\\n\\",i(t.li,{children:[\\"\\\\n\\",i(t.p,{children:[n(t.strong,{children:\\"Compiling the Documentation:\\"}),n(t.br,{}),\\"\\\\n\\",\\"For each eligible version, the script builds a table row with detailed information including:\\"]}),\\"\\\\n\\",i(t.ul,{children:[\\"\\\\n\\",n(t.li,{children:\\"The microservice name and its group (extracted from the GitLab project path).\\"}),\\"\\\\n\\",n(t.li,{children:\\"The version number (parsed from the version name).\\"}),\\"\\\\n\\",n(t.li,{children:\\"A summarized list of connected stories and bugs, formatted appropriately.\\"}),\\"\\\\n\\",n(t.li,{children:\\"A change log grouped by severity.\\"}),\\"\\\\n\\",n(t.li,{children:\\"An indication if the README was updated.\\"}),\\"\\\\n\\"]}),\\"\\\\n\\"]}),\\"\\\\n\\",i(t.li,{children:[\\"\\\\n\\",i(t.p,{children:[n(t.strong,{children:\\"Archiving Process:\\"}),n(t.br,{}),\\"\\\\n\\",\\"Finally, after generating the documentation, the script iterates through the released versions in Jira and archives them to mark the release as processed.\\"]}),\\"\\\\n\\"]}),\\"\\\\n\\"]}),\\"\\\\n\\",n(\\"br\\",{}),\\"\\\\n\\",n(t.h2,{id:\\"implementation\\",children:n(t.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#implementation\\",children:n(t.strong,{children:\\"Implementation\\"})})}),\\"\\\\n\\",n(t.p,{children:\\"Main part of the script for generating delivery documentation can look like this:\\"}),\\"\\\\n\\",n(\\"br\\",{}),\\"\\\\n\\",n(t.figure,{\\"data-rehype-pretty-code-figure\\":\\"\\",children:n(t.pre,{style:{backgroundColor:\\"#24292e\\",color:\\"#e1e4e8\\"},tabIndex:\\"0\\",\\"data-language\\":\\"bash\\",\\"data-theme\\":\\"github-dark\\",children:n(t.code,{\\"data-language\\":\\"bash\\",\\"data-theme\\":\\"github-dark\\",style:{display:\\"grid\\"},children:n(t.span,{\\"data-line\\":\\"\\",children:n(t.span,{style:{color:\\"#B392F0\\"},children:\\"https://gist.github.com/majoferenc/eb36d864fa43626d65f4020d89aa793d\\"})})})})}),\\"\\\\n\\",n(\\"br\\",{}),\\"\\\\n\\",i(t.p,{children:[\\"•\\\\t\\",n(t.strong,{children:\\"Initialization and Setup\\"}),\\":\\\\nThe function starts by setting up connections to GitLab and Jira. It initializes the markdown content with table headers.\\"]}),\\"\\\\n\\",i(t.p,{children:[\\"•\\\\t\\",n(t.strong,{children:\\"Fetching Versions\\"}),\\":\\\\nThe script retrieves project versions from Jira and filters them based on their release date and archive status. Only versions released within the last 30 days are considered.\\"]}),\\"\\\\n\\",i(t.p,{children:[\\"•\\\\t\\",n(t.strong,{children:\\"Processing Each Version\\"}),\\":\\\\nFor each version, a regular expression extracts the microservice name and version number. The script then finds the corresponding GitLab project and fetches commit details and diffs to identify changes.\\"]}),\\"\\\\n\\",i(t.p,{children:[\\"•\\\\t\\",n(t.strong,{children:\\"Building the Table Row\\"}),\\":\\\\nIt compiles all relevant details such as connected stories (after processing Jira issues), commit logs, and whether the README.md was modified, then appends this data as a new row in the markdown table.\\"]}),\\"\\\\n\\",i(t.p,{children:[\\"•\\\\t\\",n(t.strong,{children:\\"Finalization\\"}),\\":\\\\nFinally, the markdown file is named dynamically using the current date and pushed to the repository via GitLab.\\"]}),\\"\\\\n\\",n(t.p,{children:\\"Here is example implementation of the archiving process in Python:\\"}),\\"\\\\n\\",n(\\"br\\",{}),\\"\\\\n\\",n(t.figure,{\\"data-rehype-pretty-code-figure\\":\\"\\",children:n(t.pre,{style:{backgroundColor:\\"#24292e\\",color:\\"#e1e4e8\\"},tabIndex:\\"0\\",\\"data-language\\":\\"bash\\",\\"data-theme\\":\\"github-dark\\",children:n(t.code,{\\"data-language\\":\\"bash\\",\\"data-theme\\":\\"github-dark\\",style:{display:\\"grid\\"},children:n(t.span,{\\"data-line\\":\\"\\",children:n(t.span,{style:{color:\\"#B392F0\\"},children:\\"https://gist.github.com/majoferenc/8a24ac22fda4ddd8c24ef251a5c4dfd2\\"})})})})}),\\"\\\\n\\",n(\\"br\\",{}),\\"\\\\n\\",n(t.h3,{id:\\"explanation-of-the-archiving-process\\",children:n(t.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#explanation-of-the-archiving-process\\",children:n(t.strong,{children:\\"Explanation of the Archiving Process\\"})})}),\\"\\\\n\\",i(t.p,{children:[\\"•\\\\t\\",n(t.strong,{children:\\"Setup\\"}),\\":\\\\nSimilar to the documentation generation function, this section connects to Jira and retrieves the project board.\\"]}),\\"\\\\n\\",i(t.p,{children:[\\"•\\\\t\\",n(t.strong,{children:\\"Filtering Versions\\"}),\\":\\\\nThe script filters versions to include only those that are not archived and were released in the last 30 days.\\\\n•\\\\t\\",n(t.strong,{children:\\"Archiving\\"}),\\":\\\\nFor each released version that meets the criteria, the function updates its status to archived, thus keeping the Jira board organized.\\"]}),\\"\\\\n\\",n(\\"br\\",{}),\\"\\\\n\\",n(t.h2,{id:\\"benefits-of-the-approach\\",children:n(t.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#benefits-of-the-approach\\",children:n(t.strong,{children:\\"Benefits of the Approach\\"})})}),\\"\\\\n\\",i(t.p,{children:[\\"✅ \\",n(t.strong,{children:\\"Enhanced Communication:\\"}),n(t.br,{}),\\"\\\\n\\",\\"Integrators receive a well-structured document that clearly outlines the changes and updates delivered in each release, reducing ambiguity and manual effort.\\"]}),\\"\\\\n\\",i(t.p,{children:[\\"✅ \\",n(t.strong,{children:\\"Consistency and Traceability:\\"}),n(t.br,{}),\\"\\\\n\\",\\"The automated approach ensures that each release is documented with the same level of detail and consistency, which is crucial for auditing and future reference.\\"]}),\\"\\\\n\\",i(t.p,{children:[\\"✅ \\",n(t.strong,{children:\\"Improved Workflow Integration:\\"}),n(t.br,{}),\\"\\\\n\\",\\"By leveraging APIs from Jira and GitLab, the process seamlessly integrates into the existing development pipeline, making it easier to adopt and maintain over time.\\"]}),\\"\\\\n\\",n(\\"br\\",{}),\\"\\\\n\\",n(t.h2,{id:\\"conclusion\\",children:n(t.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#conclusion\\",children:n(t.strong,{children:\\"Conclusion\\"})})}),\\"\\\\n\\",n(t.p,{children:\\"Automating the generation of delivery documentation is a powerful strategy for any organization working with microservices. The Python script described here not only creates a detailed markdown document that summarizes microservice releases but also helps maintain an organized release management process by archiving Jira releases. This results in improved communication, enhanced traceability, and overall efficiency in managing delivery pipelines.\\"})]})}return{default:function(e={}){const{wrapper:i}=e.components||{};return i?n(i,{...e,children:n(_createMdxContent,{...e})}):_createMdxContent(e)}};","slugAsParams":"automating-delivery-docu-gen"},{"slug":"blog/debug-spring-app-in-k8s","title":"Debug Spring Boot app in Kubernetes","description":"Remote Debugging of your Java application made easy","date":"2025-02-16T00:00:00.000Z","published":true,"tags":["code","blog","gitops","argocd","terraform"],"body":"const{Fragment:e,jsx:n,jsxs:l}=arguments[0];function _createMdxContent(r){const a={a:\\"a\\",code:\\"code\\",figure:\\"figure\\",h1:\\"h1\\",h2:\\"h2\\",li:\\"li\\",p:\\"p\\",pre:\\"pre\\",span:\\"span\\",strong:\\"strong\\",ul:\\"ul\\",...r.components},{ZoomableImage:o}=a;return o||function(e,n){throw new Error(\\"Expected \\"+(n?\\"component\\":\\"object\\")+\\" `\\"+e+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}(\\"ZoomableImage\\",!0),l(e,{children:[n(a.h1,{id:\\"debug-spring-boot-app-in-kubernetes\\",children:n(a.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#debug-spring-boot-app-in-kubernetes\\",children:n(a.strong,{children:\\"Debug Spring Boot app in Kubernetes\\"})})}),\\"\\\\n\\",n(\\"br\\",{}),\\"\\\\n\\",n(a.p,{children:\\"Debugging a Spring Boot application running on Kubernetes (K8s) can be challenging, especially when the application is deployed in a production environment. Here are some tips to help you debug your Spring Boot application in K8s.\\"}),\\"\\\\n\\",n(\\"br\\",{}),\\"\\\\n\\",n(a.h2,{id:\\"enable-debugging-in-your-spring-boot-application\\",children:n(a.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#enable-debugging-in-your-spring-boot-application\\",children:n(a.strong,{children:\\"Enable Debugging in Your Spring Boot Application\\"})})}),\\"\\\\n\\",n(\\"br\\",{}),\\"\\\\n\\",n(a.p,{children:\\"To enable debugging in your Spring Boot application, you need to add the following line to your config-map of a microservice as an environment variable:\\"}),\\"\\\\n\\",n(\\"br\\",{}),\\"\\\\n\\",n(a.figure,{\\"data-rehype-pretty-code-figure\\":\\"\\",children:n(a.pre,{style:{backgroundColor:\\"#24292e\\",color:\\"#e1e4e8\\"},tabIndex:\\"0\\",\\"data-language\\":\\"yaml\\",\\"data-theme\\":\\"github-dark\\",children:l(a.code,{\\"data-language\\":\\"yaml\\",\\"data-theme\\":\\"github-dark\\",style:{display:\\"grid\\"},children:[l(a.span,{\\"data-line\\":\\"\\",children:[n(a.span,{style:{color:\\"#85E89D\\"},children:\\"JAVA_TOOL_OPTIONS\\"}),n(a.span,{style:{color:\\"#E1E4E8\\"},children:\\": \\"}),n(a.span,{style:{color:\\"#9ECBFF\\"},children:\\"-agentlib:jdwp=transport=dt_socket,address=0.0.0.0:8000,\\"})]}),\\"\\\\n\\",n(a.span,{\\"data-line\\":\\"\\",children:n(a.span,{style:{color:\\"#9ECBFF\\"},children:\\"server=y,suspend=n\\"})})]})})}),\\"\\\\n\\",n(a.p,{children:\\"This will enable debugging on port 8000.\\"}),\\"\\\\n\\",n(\\"br\\",{}),\\"\\\\n\\",n(a.p,{children:\\"SSL Debugging:\\"}),\\"\\\\n\\",n(a.figure,{\\"data-rehype-pretty-code-figure\\":\\"\\",children:n(a.pre,{style:{backgroundColor:\\"#24292e\\",color:\\"#e1e4e8\\"},tabIndex:\\"0\\",\\"data-language\\":\\"bash\\",\\"data-theme\\":\\"github-dark\\",children:n(a.code,{\\"data-language\\":\\"bash\\",\\"data-theme\\":\\"github-dark\\",style:{display:\\"grid\\"},children:l(a.span,{\\"data-line\\":\\"\\",children:[n(a.span,{style:{color:\\"#B392F0\\"},children:\\"JAVA_TOOL_OPTIONS:\\"}),n(a.span,{style:{color:\\"#79B8FF\\"},children:\\" -Djavax.net.debug=ALL\\"})]})})})}),\\"\\\\n\\",n(\\"br\\",{}),\\"\\\\n\\",n(a.h2,{id:\\"expose-debugging-port-in-your-k8s-deployment\\",children:n(a.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#expose-debugging-port-in-your-k8s-deployment\\",children:n(a.strong,{children:\\"Expose Debugging Port in Your K8s Deployment\\"})})}),\\"\\\\n\\",n(a.p,{children:\\"To expose the debugging port in your K8s deployment, you need to add the following lines to your deployment.yaml file:\\"}),\\"\\\\n\\",n(a.figure,{\\"data-rehype-pretty-code-figure\\":\\"\\",children:n(a.pre,{style:{backgroundColor:\\"#24292e\\",color:\\"#e1e4e8\\"},tabIndex:\\"0\\",\\"data-language\\":\\"yaml\\",\\"data-theme\\":\\"github-dark\\",children:l(a.code,{\\"data-language\\":\\"yaml\\",\\"data-theme\\":\\"github-dark\\",style:{display:\\"grid\\"},children:[l(a.span,{\\"data-line\\":\\"\\",children:[n(a.span,{style:{color:\\"#85E89D\\"},children:\\"spec\\"}),n(a.span,{style:{color:\\"#E1E4E8\\"},children:\\":\\"})]}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[n(a.span,{style:{color:\\"#85E89D\\"},children:\\"  template\\"}),n(a.span,{style:{color:\\"#E1E4E8\\"},children:\\":\\"})]}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[n(a.span,{style:{color:\\"#85E89D\\"},children:\\"    spec\\"}),n(a.span,{style:{color:\\"#E1E4E8\\"},children:\\":\\"})]}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[n(a.span,{style:{color:\\"#85E89D\\"},children:\\"      containers\\"}),n(a.span,{style:{color:\\"#E1E4E8\\"},children:\\":\\"})]}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[n(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"      - \\"}),n(a.span,{style:{color:\\"#85E89D\\"},children:\\"name\\"}),n(a.span,{style:{color:\\"#E1E4E8\\"},children:\\": \\"}),n(a.span,{style:{color:\\"#9ECBFF\\"},children:\\"container-name\\"})]}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[n(a.span,{style:{color:\\"#85E89D\\"},children:\\"        image\\"}),n(a.span,{style:{color:\\"#E1E4E8\\"},children:\\": \\"}),n(a.span,{style:{color:\\"#9ECBFF\\"},children:\\"image-name\\"})]}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[n(a.span,{style:{color:\\"#85E89D\\"},children:\\"        ports\\"}),n(a.span,{style:{color:\\"#E1E4E8\\"},children:\\":\\"})]}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[n(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"        - \\"}),n(a.span,{style:{color:\\"#85E89D\\"},children:\\"name\\"}),n(a.span,{style:{color:\\"#E1E4E8\\"},children:\\": \\"}),n(a.span,{style:{color:\\"#9ECBFF\\"},children:\\"debug\\"})]}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[n(a.span,{style:{color:\\"#85E89D\\"},children:\\"          containerPort\\"}),n(a.span,{style:{color:\\"#E1E4E8\\"},children:\\": \\"}),n(a.span,{style:{color:\\"#79B8FF\\"},children:\\"8000\\"})]}),\\"\\\\n\\",n(a.span,{\\"data-line\\":\\"\\",children:\\" \\"})]})})}),\\"\\\\n\\",n(a.p,{children:\\"This will expose the debugging port on port 8000 in your container.\\"}),\\"\\\\n\\",n(a.h2,{id:\\"port-forwarding-to-your-local-machine\\",children:n(a.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#port-forwarding-to-your-local-machine\\",children:\\"Port Forwarding to Your Local Machine\\"})}),\\"\\\\n\\",n(a.p,{children:\\"To debug your Spring Boot application from your local machine, you need to forward the debugging port to your local machine. You can do this by running the following command:\\"}),\\"\\\\n\\",n(a.figure,{\\"data-rehype-pretty-code-figure\\":\\"\\",children:n(a.pre,{style:{backgroundColor:\\"#24292e\\",color:\\"#e1e4e8\\"},tabIndex:\\"0\\",\\"data-language\\":\\"bash\\",\\"data-theme\\":\\"github-dark\\",children:n(a.code,{\\"data-language\\":\\"bash\\",\\"data-theme\\":\\"github-dark\\",style:{display:\\"grid\\"},children:l(a.span,{\\"data-line\\":\\"\\",children:[n(a.span,{style:{color:\\"#B392F0\\"},children:\\"kubectl\\"}),n(a.span,{style:{color:\\"#9ECBFF\\"},children:\\" port-forward\\"}),n(a.span,{style:{color:\\"#9ECBFF\\"},children:\\" {pod-name}\\"}),n(a.span,{style:{color:\\"#9ECBFF\\"},children:\\" 8000:8000\\"})]})})})}),\\"\\\\n\\",n(a.p,{children:\\"This will forward the debugging port from your K8s pod to your local machine.\\"}),\\"\\\\n\\",n(a.p,{children:\\"To expose the debugging port via K8s service, you can create a service.yaml file with the following contents:\\"}),\\"\\\\n\\",n(a.figure,{\\"data-rehype-pretty-code-figure\\":\\"\\",children:n(a.pre,{style:{backgroundColor:\\"#24292e\\",color:\\"#e1e4e8\\"},tabIndex:\\"0\\",\\"data-language\\":\\"yaml\\",\\"data-theme\\":\\"github-dark\\",children:l(a.code,{\\"data-language\\":\\"yaml\\",\\"data-theme\\":\\"github-dark\\",style:{display:\\"grid\\"},children:[l(a.span,{\\"data-line\\":\\"\\",children:[n(a.span,{style:{color:\\"#85E89D\\"},children:\\"apiVersion\\"}),n(a.span,{style:{color:\\"#E1E4E8\\"},children:\\": \\"}),n(a.span,{style:{color:\\"#9ECBFF\\"},children:\\"v1\\"})]}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[n(a.span,{style:{color:\\"#85E89D\\"},children:\\"kind\\"}),n(a.span,{style:{color:\\"#E1E4E8\\"},children:\\": \\"}),n(a.span,{style:{color:\\"#9ECBFF\\"},children:\\"Service\\"})]}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[n(a.span,{style:{color:\\"#85E89D\\"},children:\\"metadata\\"}),n(a.span,{style:{color:\\"#E1E4E8\\"},children:\\":\\"})]}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[n(a.span,{style:{color:\\"#85E89D\\"},children:\\"  name\\"}),n(a.span,{style:{color:\\"#E1E4E8\\"},children:\\": \\"}),n(a.span,{style:{color:\\"#9ECBFF\\"},children:\\"service-name\\"})]}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[n(a.span,{style:{color:\\"#85E89D\\"},children:\\"spec\\"}),n(a.span,{style:{color:\\"#E1E4E8\\"},children:\\":\\"})]}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[n(a.span,{style:{color:\\"#85E89D\\"},children:\\"  selector\\"}),n(a.span,{style:{color:\\"#E1E4E8\\"},children:\\":\\"})]}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[n(a.span,{style:{color:\\"#85E89D\\"},children:\\"    app\\"}),n(a.span,{style:{color:\\"#E1E4E8\\"},children:\\": \\"}),n(a.span,{style:{color:\\"#9ECBFF\\"},children:\\"app-name\\"})]}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[n(a.span,{style:{color:\\"#85E89D\\"},children:\\"  ports\\"}),n(a.span,{style:{color:\\"#E1E4E8\\"},children:\\":\\"})]}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[n(a.span,{style:{color:\\"#E1E4E8\\"},children:\\"  - \\"}),n(a.span,{style:{color:\\"#85E89D\\"},children:\\"name\\"}),n(a.span,{style:{color:\\"#E1E4E8\\"},children:\\": \\"}),n(a.span,{style:{color:\\"#9ECBFF\\"},children:\\"debug\\"})]}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[n(a.span,{style:{color:\\"#85E89D\\"},children:\\"    port\\"}),n(a.span,{style:{color:\\"#E1E4E8\\"},children:\\": \\"}),n(a.span,{style:{color:\\"#79B8FF\\"},children:\\"8000\\"})]}),\\"\\\\n\\",l(a.span,{\\"data-line\\":\\"\\",children:[n(a.span,{style:{color:\\"#85E89D\\"},children:\\"    targetPort\\"}),n(a.span,{style:{color:\\"#E1E4E8\\"},children:\\": \\"}),n(a.span,{style:{color:\\"#79B8FF\\"},children:\\"8000\\"})]}),\\"\\\\n\\",n(a.span,{\\"data-line\\":\\"\\",children:\\" \\"})]})})}),\\"\\\\n\\",n(a.p,{children:\\"This will create a new service called service-name that maps the debugging port in your container to port 8000 on the service. You can then use the service IP to connect to the debugging port from your local machine.\\"}),\\"\\\\n\\",n(a.h2,{id:\\"debugging-your-spring-boot-application\\",children:n(a.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#debugging-your-spring-boot-application\\",children:n(a.strong,{children:\\"Debugging Your Spring Boot Application\\"})})}),\\"\\\\n\\",n(a.p,{children:\\"Once you have forwarded the debugging port to your local machine, you can start debugging your Spring Boot application using your favorite IDE.\\"}),\\"\\\\n\\",n(a.p,{children:\\"In IntelliJ IDEA, you can create a new Remote Debug configuration by going to Run > Edit Configurations, clicking the + button, selecting Remote, and filling in the following fields:\\"}),\\"\\\\n\\",l(a.ul,{children:[\\"\\\\n\\",n(a.li,{children:\\"Name: debug-name\\"}),\\"\\\\n\\",n(a.li,{children:\\"Host: localhost\\"}),\\"\\\\n\\",n(a.li,{children:\\"Port: 8000\\"}),\\"\\\\n\\"]}),\\"\\\\n\\",n(\\"br\\",{}),\\"\\\\n\\",n(o,{src:\\"/intellij_remote_debug.webp\\"}),\\"\\\\n\\",n(\\"br\\",{}),\\"\\\\n\\",n(a.p,{children:\\"Click Apply and then Debug to start debugging your Spring Boot application.\\"})]})}return{default:function(e={}){const{wrapper:l}=e.components||{};return l?n(l,{...e,children:n(_createMdxContent,{...e})}):_createMdxContent(e)}};","slugAsParams":"debug-spring-app-in-k8s"},{"slug":"blog/gitops-centered-dev-environment","title":"GitOps centered development environment using FluxCD","description":"Coming soon","date":"2025-02-28T00:00:00.000Z","published":false,"tags":["code","blog","gitops","fluxcd","development"],"body":"const{Fragment:n,jsx:e,jsxs:t}=arguments[0];function _createMdxContent(r){const o={a:\\"a\\",h1:\\"h1\\",p:\\"p\\",strong:\\"strong\\",...r.components};return t(n,{children:[e(o.h1,{id:\\"gitops-centered-development-environment-using-fluxcd\\",children:e(o.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#gitops-centered-development-environment-using-fluxcd\\",children:e(o.strong,{children:\\"GitOps centered development environment using FluxCD\\"})})}),\\"\\\\n\\",e(\\"br\\",{}),\\"\\\\n\\",e(o.p,{children:\\"Coming soon!\\"}),\\"\\\\n\\",e(\\"br\\",{})]})}return{default:function(n={}){const{wrapper:t}=n.components||{};return t?e(t,{...n,children:e(_createMdxContent,{...n})}):_createMdxContent(n)}};","slugAsParams":"gitops-centered-dev-environment"},{"slug":"blog/how-to-start-with-argocd-for-microservices","title":"How to start with ArgoCD deployment when using microservices","description":"Coming soon","date":"2025-02-28T00:00:00.000Z","published":false,"tags":["code","blog","gitops","fluxcd","development"],"body":"const{Fragment:n,jsx:e,jsxs:t}=arguments[0];function _createMdxContent(r){const o={a:\\"a\\",h1:\\"h1\\",p:\\"p\\",strong:\\"strong\\",...r.components};return t(n,{children:[e(o.h1,{id:\\"how-to-start-with-argocd-deployment-when-using-microservices\\",children:e(o.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#how-to-start-with-argocd-deployment-when-using-microservices\\",children:e(o.strong,{children:\\"How to start with ArgoCD deployment when using microservices\\"})})}),\\"\\\\n\\",e(\\"br\\",{}),\\"\\\\n\\",e(o.p,{children:\\"Coming soon!\\"}),\\"\\\\n\\",e(\\"br\\",{})]})}return{default:function(n={}){const{wrapper:t}=n.components||{};return t?e(t,{...n,children:e(_createMdxContent,{...n})}):_createMdxContent(n)}};","slugAsParams":"how-to-start-with-argocd-for-microservices"},{"slug":"blog/important-aspects-of-microservices-architecture","title":"Important aspects of microservices architecture and development","description":"Coming soon","date":"2025-02-28T00:00:00.000Z","published":false,"tags":["code","blog","gitops","fluxcd","development"],"body":"const{Fragment:e,jsx:n,jsxs:t}=arguments[0];function _createMdxContent(r){const c={a:\\"a\\",h1:\\"h1\\",p:\\"p\\",strong:\\"strong\\",...r.components};return t(e,{children:[n(c.h1,{id:\\"important-aspects-of-microservices-architecture-and-development\\",children:n(c.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#important-aspects-of-microservices-architecture-and-development\\",children:n(c.strong,{children:\\"Important aspects of microservices architecture and development\\"})})}),\\"\\\\n\\",n(\\"br\\",{}),\\"\\\\n\\",n(c.p,{children:\\"Coming soon!\\"}),\\"\\\\n\\",n(\\"br\\",{})]})}return{default:function(e={}){const{wrapper:t}=e.components||{};return t?n(t,{...e,children:n(_createMdxContent,{...e})}):_createMdxContent(e)}};","slugAsParams":"important-aspects-of-microservices-architecture"},{"slug":"blog/microservice-tracing","title":"Microservice tracing using Jaeger","description":"Coming soon","date":"2025-02-28T00:00:00.000Z","published":false,"tags":["code","blog","gitops","fluxcd","development"],"body":"const{Fragment:n,jsx:e,jsxs:r}=arguments[0];function _createMdxContent(t){const c={a:\\"a\\",h1:\\"h1\\",p:\\"p\\",strong:\\"strong\\",...t.components};return r(n,{children:[e(c.h1,{id:\\"microservice-tracing-using-jaeger\\",children:e(c.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#microservice-tracing-using-jaeger\\",children:e(c.strong,{children:\\"Microservice tracing using Jaeger\\"})})}),\\"\\\\n\\",e(\\"br\\",{}),\\"\\\\n\\",e(c.p,{children:\\"Coming soon!\\"}),\\"\\\\n\\",e(\\"br\\",{})]})}return{default:function(n={}){const{wrapper:r}=n.components||{};return r?e(r,{...n,children:e(_createMdxContent,{...n})}):_createMdxContent(n)}};","slugAsParams":"microservice-tracing"},{"slug":"blog/migrating-monolithic-app-deployment-into-k8s","title":"Migrating monolithic app deployment into Kubernetes","description":"Coming soon","date":"2025-02-28T00:00:00.000Z","published":false,"tags":["code","blog","gitops","fluxcd","development"],"body":"const{Fragment:n,jsx:e,jsxs:t}=arguments[0];function _createMdxContent(o){const r={a:\\"a\\",h1:\\"h1\\",p:\\"p\\",strong:\\"strong\\",...o.components};return t(n,{children:[e(r.h1,{id:\\"migrating-monolithic-app-deployment-into-kubernetes\\",children:e(r.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#migrating-monolithic-app-deployment-into-kubernetes\\",children:e(r.strong,{children:\\"Migrating monolithic app deployment into Kubernetes\\"})})}),\\"\\\\n\\",e(\\"br\\",{}),\\"\\\\n\\",e(r.p,{children:\\"Coming soon!\\"}),\\"\\\\n\\",e(\\"br\\",{})]})}return{default:function(n={}){const{wrapper:t}=n.components||{};return t?e(t,{...n,children:e(_createMdxContent,{...n})}):_createMdxContent(n)}};","slugAsParams":"migrating-monolithic-app-deployment-into-k8s"},{"slug":"blog/ollama-cheatsheet","title":"Tweaking GenAI LLMs locally using Ollama","description":"A quick reference guide for running GenAI LLM models and tweaking them using Ollama.","date":"2025-01-29T00:00:00.000Z","published":true,"tags":["code","blog"],"body":"const{Fragment:e,jsx:n,jsxs:a}=arguments[0];function _createMdxContent(l){const r={a:\\"a\\",code:\\"code\\",figure:\\"figure\\",h1:\\"h1\\",h2:\\"h2\\",h3:\\"h3\\",li:\\"li\\",p:\\"p\\",pre:\\"pre\\",span:\\"span\\",strong:\\"strong\\",ul:\\"ul\\",...l.components},{ZoomableImage:i}=r;return i||function(e,n){throw new Error(\\"Expected \\"+(n?\\"component\\":\\"object\\")+\\" `\\"+e+\\"` to be defined: you likely forgot to import, pass, or provide it.\\")}(\\"ZoomableImage\\",!0),a(e,{children:[n(r.h1,{id:\\"what-is-ollama\\",children:n(r.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#what-is-ollama\\",children:n(r.strong,{children:\\"What is Ollama\\"})})}),\\"\\\\n\\",n(r.p,{children:\\"Ollama is an open-source platform that runs open LLMs on your local machine (or a server).\\\\nIt acts like a bridge between any open LLM and your machine, not only running them but also providing an API layer on top of them so that another application or service can use them.\\"}),\\"\\\\n\\",n(r.h1,{id:\\"tweaking-genai-llm-locally-using-ollama\\",children:n(r.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#tweaking-genai-llm-locally-using-ollama\\",children:n(r.strong,{children:\\"Tweaking GenAI LLM locally using Ollama\\"})})}),\\"\\\\n\\",n(r.p,{children:\\"This guide provides essential commands and environment tweaks for optimizing Ollama when running complex LLM models locally.\\"}),\\"\\\\n\\",n(r.h1,{id:\\"prerequisites\\",children:n(r.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#prerequisites\\",children:n(r.strong,{children:\\"Prerequisites\\"})})}),\\"\\\\n\\",a(r.p,{children:[\\"If you don\'t have Ollama installed, go to \\",n(r.a,{href:\\"https://ollama.com\\",children:\\"https://ollama.com\\"}),\\" and download the installation package:\\"]}),\\"\\\\n\\",n(\\"br\\",{}),\\"\\\\n\\",n(i,{src:\\"/install_ollama.png\\"}),\\"\\\\n\\",n(\\"br\\",{}),\\"\\\\n\\",n(r.h2,{id:\\"running-a-model\\",children:n(r.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#running-a-model\\",children:n(r.strong,{children:\\"Running a Model\\"})})}),\\"\\\\n\\",a(r.p,{children:[\\"Find your desired model on \\",n(r.a,{href:\\"https://ollama.com\\",children:\\"https://ollama.com\\"}),\\" in this example we are going to use popular DeepSeek model:\\"]}),\\"\\\\n\\",n(\\"br\\",{}),\\"\\\\n\\",n(i,{src:\\"/ollama_model_page.png\\"}),\\"\\\\n\\",n(\\"br\\",{}),\\"\\\\n\\",n(r.p,{children:\\"To run our chosen model with Ollama open your terminal and run following command:\\"}),\\"\\\\n\\",n(r.figure,{\\"data-rehype-pretty-code-figure\\":\\"\\",children:n(r.pre,{style:{backgroundColor:\\"#24292e\\",color:\\"#e1e4e8\\"},tabIndex:\\"0\\",\\"data-language\\":\\"bash\\",\\"data-theme\\":\\"github-dark\\",children:n(r.code,{\\"data-language\\":\\"bash\\",\\"data-theme\\":\\"github-dark\\",style:{display:\\"grid\\"},children:a(r.span,{\\"data-line\\":\\"\\",children:[n(r.span,{style:{color:\\"#B392F0\\"},children:\\"ollama\\"}),n(r.span,{style:{color:\\"#9ECBFF\\"},children:\\" run\\"}),n(r.span,{style:{color:\\"#9ECBFF\\"},children:\\" deepseek-r1:14b\\"})]})})})}),\\"\\\\n\\",n(\\"br\\",{}),\\"\\\\n\\",n(r.h2,{id:\\"tweaking-model-parameters\\",children:n(r.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#tweaking-model-parameters\\",children:n(r.strong,{children:\\"Tweaking Model Parameters\\"})})}),\\"\\\\n\\",n(\\"br\\",{}),\\"\\\\n\\",n(r.p,{children:\\"Ollama defaults model context size is set to 2048. To change this, you\'ll need to create a \'Modelfile\' and include the following content\\"}),\\"\\\\n\\",n(\\"br\\",{}),\\"\\\\n\\",n(r.figure,{\\"data-rehype-pretty-code-figure\\":\\"\\",children:n(r.pre,{style:{backgroundColor:\\"#24292e\\",color:\\"#e1e4e8\\"},tabIndex:\\"0\\",\\"data-language\\":\\"ollama\\",\\"data-theme\\":\\"github-dark\\",children:a(r.code,{\\"data-language\\":\\"ollama\\",\\"data-theme\\":\\"github-dark\\",style:{display:\\"grid\\"},children:[n(r.span,{\\"data-line\\":\\"\\",children:n(r.span,{children:\\"FROM deepseek-r1:14b\\"})}),\\"\\\\n\\",n(r.span,{\\"data-line\\":\\"\\",children:\\" \\"}),\\"\\\\n\\",n(r.span,{\\"data-line\\":\\"\\",children:n(r.span,{children:\\"PARAMETER num_ctx 32768\\"})}),\\"\\\\n\\",n(r.span,{\\"data-line\\":\\"\\",children:n(r.span,{children:\\"PARAMETER num_predict -1\\"})})]})})}),\\"\\\\n\\",n(\\"br\\",{}),\\"\\\\n\\",n(r.p,{children:\\"In this file, num_ctx is set to the maximum context size of the model, and num_predict is set to -1, which allows the model to use the remaining context as output context.\\"}),\\"\\\\n\\",n(r.p,{children:\\"After creating the file, run the following command:\\"}),\\"\\\\n\\",n(r.figure,{\\"data-rehype-pretty-code-figure\\":\\"\\",children:n(r.pre,{style:{backgroundColor:\\"#24292e\\",color:\\"#e1e4e8\\"},tabIndex:\\"0\\",\\"data-language\\":\\"bash\\",\\"data-theme\\":\\"github-dark\\",children:n(r.code,{\\"data-language\\":\\"bash\\",\\"data-theme\\":\\"github-dark\\",style:{display:\\"grid\\"},children:a(r.span,{\\"data-line\\":\\"\\",children:[n(r.span,{style:{color:\\"#B392F0\\"},children:\\"ollama\\"}),n(r.span,{style:{color:\\"#9ECBFF\\"},children:\\" create\\"}),n(r.span,{style:{color:\\"#9ECBFF\\"},children:\\" deepseek-r1-14b-32k-context\\"}),n(r.span,{style:{color:\\"#79B8FF\\"},children:\\" -f\\"}),n(r.span,{style:{color:\\"#9ECBFF\\"},children:\\" ./Modelfile\\"})]})})})}),\\"\\\\n\\",n(r.p,{children:\\"Now, you can use the entire context of the model without truncation by calling:\\"}),\\"\\\\n\\",n(r.figure,{\\"data-rehype-pretty-code-figure\\":\\"\\",children:n(r.pre,{style:{backgroundColor:\\"#24292e\\",color:\\"#e1e4e8\\"},tabIndex:\\"0\\",\\"data-language\\":\\"bash\\",\\"data-theme\\":\\"github-dark\\",children:n(r.code,{\\"data-language\\":\\"bash\\",\\"data-theme\\":\\"github-dark\\",style:{display:\\"grid\\"},children:a(r.span,{\\"data-line\\":\\"\\",children:[n(r.span,{style:{color:\\"#B392F0\\"},children:\\"ollama\\"}),n(r.span,{style:{color:\\"#9ECBFF\\"},children:\\" run\\"}),n(r.span,{style:{color:\\"#9ECBFF\\"},children:\\" deepseek-r1-14b-32k-context\\"})]})})})}),\\"\\\\n\\",n(r.h2,{id:\\"performance-optimization\\",children:n(r.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#performance-optimization\\",children:n(r.strong,{children:\\"Performance Optimization\\"})})}),\\"\\\\n\\",n(\\"br\\",{}),\\"\\\\n\\",n(r.p,{children:\\"Set environment variables to improve performance (maximize token generation speed):\\"}),\\"\\\\n\\",n(r.figure,{\\"data-rehype-pretty-code-figure\\":\\"\\",children:n(r.pre,{style:{backgroundColor:\\"#24292e\\",color:\\"#e1e4e8\\"},tabIndex:\\"0\\",\\"data-language\\":\\"bash\\",\\"data-theme\\":\\"github-dark\\",children:a(r.code,{\\"data-language\\":\\"bash\\",\\"data-theme\\":\\"github-dark\\",style:{display:\\"grid\\"},children:[a(r.span,{\\"data-line\\":\\"\\",children:[n(r.span,{style:{color:\\"#F97583\\"},children:\\"export\\"}),n(r.span,{style:{color:\\"#E1E4E8\\"},children:\\" OLLAMA_FLASH_ATTENTION\\"}),n(r.span,{style:{color:\\"#F97583\\"},children:\\"=\\"}),n(r.span,{style:{color:\\"#E1E4E8\\"},children:\\"true \\"})]}),\\"\\\\n\\",a(r.span,{\\"data-line\\":\\"\\",children:[n(r.span,{style:{color:\\"#F97583\\"},children:\\"export\\"}),n(r.span,{style:{color:\\"#E1E4E8\\"},children:\\" OLLAMA_KV_CACHE_TYPE\\"}),n(r.span,{style:{color:\\"#F97583\\"},children:\\"=\\"}),n(r.span,{style:{color:\\"#E1E4E8\\"},children:\\"f16    \\"})]})]})})}),\\"\\\\n\\",n(r.h3,{id:\\"available-ollama_kv_cache_type-values\\",children:n(r.a,{className:\\"subheading-anchor\\",\\"aria-label\\":\\"Link to section\\",href:\\"#available-ollama_kv_cache_type-values\\",children:a(r.strong,{children:[\\"Available \\",n(r.code,{children:\\"OLLAMA_KV_CACHE_TYPE\\"}),\\" Values\\"]})})}),\\"\\\\n\\",a(r.ul,{children:[\\"\\\\n\\",n(r.li,{children:n(r.code,{children:\\"q8_0\\"})}),\\"\\\\n\\",n(r.li,{children:n(r.code,{children:\\"q4_0\\"})}),\\"\\\\n\\",a(r.li,{children:[n(r.code,{children:\\"f16\\"}),\\" (for 16-bit floating point caching)\\"]}),\\"\\\\n\\"]}),\\"\\\\n\\",n(\\"br\\",{}),\\"\\\\n\\",n(r.p,{children:\\"These settings can help optimize memory usage and speed when running large models locally.\\"})]})}return{default:function(e={}){const{wrapper:a}=e.components||{};return a?n(a,{...e,children:n(_createMdxContent,{...e})}):_createMdxContent(e)}};","slugAsParams":"ollama-cheatsheet"}]'),o=r(9205);let l=(0,o.Z)("Calendar",[["path",{d:"M8 2v4",key:"1cmpym"}],["path",{d:"M16 2v4",key:"4m81vk"}],["rect",{width:"18",height:"18",x:"3",y:"4",rx:"2",key:"1hopcy"}],["path",{d:"M3 10h18",key:"8toen8"}]]);var s=r(7648),c=r(3448);let d=(0,r(535).j)("inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2",{variants:{variant:{default:"border-transparent bg-primary text-primary-foreground hover:bg-primary/80",secondary:"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80",destructive:"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80",outline:"text-foreground"}},defaultVariants:{variant:"default"}});function h(e){let{tag:n,current:r,count:a}=e;return(0,t.jsxs)("div",{className:d({variant:r?"default":"secondary",className:"no-underline rounded-md"}),children:[n," ",a?"(".concat(a,")"):null]})}function u(e){let{slug:n,title:r,description:a,date:i,tags:o}=e;return(0,t.jsxs)("article",{className:"flex flex-col gap-3 border-b border-border py-6  max-w-full overflow-hidden transition-all duration-300  hover:bg-muted/30 hover:shadow-sm rounded-lg px-4 -mx-4 sm:mx-0",children:[(0,t.jsx)("h2",{className:"text-2xl sm:text-3xl font-serif font-bold leading-snug  hover:text-primary transition-colors duration-300  break-words",children:(0,t.jsx)(s.default,{href:"/".concat(n),className:"block",children:r})}),o&&o.length>0&&(0,t.jsx)("div",{className:"flex flex-wrap gap-2",children:o.map(e=>(0,t.jsx)(h,{tag:e},e))}),a&&(0,t.jsx)("p",{className:"text-base sm:text-lg text-muted-foreground leading-relaxed break-words",children:a}),(0,t.jsxs)("div",{className:"flex items-center gap-2 text-sm text-muted-foreground",children:[(0,t.jsx)(l,{className:"h-4 w-4"}),(0,t.jsx)("time",{dateTime:i,children:(0,c.p6)(i)})]})]})}var g=r(9376);let p=(0,o.Z)("ChevronLeft",[["path",{d:"m15 18-6-6 6-6",key:"1wnfg3"}]]);var m=r(407);(0,o.Z)("Ellipsis",[["circle",{cx:"12",cy:"12",r:"1",key:"41hilf"}],["circle",{cx:"19",cy:"12",r:"1",key:"1wjl8i"}],["circle",{cx:"5",cy:"12",r:"1",key:"1pcz8c"}]]);var f=r(2381);let b=e=>{let{className:n,...r}=e;return(0,t.jsx)("nav",{role:"navigation","aria-label":"pagination",className:(0,c.cn)("mx-auto flex w-full justify-center",n),...r})};b.displayName="Pagination";let y=a.forwardRef((e,n)=>{let{className:r,...a}=e;return(0,t.jsx)("ul",{ref:n,className:(0,c.cn)("flex flex-row items-center gap-1",r),...a})});y.displayName="PaginationContent";let v=a.forwardRef((e,n)=>{let{className:r,...a}=e;return(0,t.jsx)("li",{ref:n,className:(0,c.cn)("",r),...a})});v.displayName="PaginationItem";let x=e=>{let{className:n,isActive:r,size:a="icon",...i}=e;return(0,t.jsx)("a",{"aria-current":r?"page":void 0,className:(0,c.cn)((0,f.d)({variant:r?"outline":"ghost",size:a}),n),...i})};x.displayName="PaginationLink";let w=e=>{let{className:n,...r}=e;return(0,t.jsxs)(x,{"aria-label":"Go to previous page",size:"default",className:(0,c.cn)("gap-1 pl-2.5",n),...r,children:[(0,t.jsx)(p,{className:"h-4 w-4"}),(0,t.jsx)("span",{children:"Previous"})]})};w.displayName="PaginationPrevious";let k=e=>{let{className:n,...r}=e;return(0,t.jsxs)(x,{"aria-label":"Go to next page",size:"default",className:(0,c.cn)("gap-1 pr-2.5",n),...r,children:[(0,t.jsx)("span",{children:"Next"}),(0,t.jsx)(m.Z,{className:"h-4 w-4"})]})};function E(e){let{totalPages:n,className:r}=e,a=(0,g.usePathname)(),i=(0,g.useSearchParams)(),o=Number(i.get("page"))||1,l=o-1,s=o+1,c=e=>{let n=new URLSearchParams(i);return n.set("page",e.toString()),"".concat(a,"?").concat(n.toString())};return(0,t.jsx)(b,{className:r,children:(0,t.jsxs)(y,{children:[l>=1?(0,t.jsx)(v,{children:(0,t.jsx)(w,{href:c(l)})}):null,Array(n).fill("").map((e,n)=>(0,t.jsx)(v,{className:"hidden sm:inline-block",children:(0,t.jsx)(x,{isActive:o===n+1,href:c(n+1),children:n+1})},"page-button-".concat(n))),s<=n?(0,t.jsx)(v,{children:(0,t.jsx)(k,{href:c(s)})}):null]})})}function C(e){return(0,t.jsx)(a.Suspense,{fallback:(0,t.jsx)(j,{}),children:(0,t.jsx)(E,{...e})})}function j(){return(0,t.jsxs)("div",{className:"h-10 w-full flex justify-center items-center gap-2",children:[(0,t.jsx)("div",{className:"h-8 w-8 bg-gray-200 rounded animate-pulse"}),(0,t.jsx)("div",{className:"h-8 w-8 bg-gray-200 rounded animate-pulse"}),(0,t.jsx)("div",{className:"h-8 w-8 bg-gray-200 rounded animate-pulse"})]})}function N(){var e;let n=Number(null===(e=(0,g.useSearchParams)().get("page"))||void 0===e?void 0:e.toString())||1,r=(0,c.O2)(i.filter(e=>e.published)),o=Math.ceil(r.length/5),l=r.slice(5*(n-1),5*n);return(0,t.jsx)(a.Suspense,{fallback:(0,t.jsx)(function(){return(0,t.jsxs)("div",{className:"h-10 w-full flex justify-center items-center gap-2",children:[(0,t.jsx)("div",{className:"h-8 w-8 bg-gray-200 rounded animate-pulse"}),(0,t.jsx)("div",{className:"h-8 w-8 bg-gray-200 rounded animate-pulse"}),(0,t.jsx)("div",{className:"h-8 w-8 bg-gray-200 rounded animate-pulse"})]})},{}),children:(0,t.jsx)("div",{className:"relative",children:(0,t.jsxs)("div",{className:"mx-auto relative z-10 max-w-4xl lg:py-2 0 h-full px-2",children:[(0,t.jsx)("div",{className:"flex flex-col items-start gap-4 md:flex-row md:justify-between md:gap-8",children:(0,t.jsxs)("div",{className:"flex-1 space-y-4 py-20",children:[(0,t.jsx)("h1",{className:"inline-block font-black text-4xl lg:text-5xl text-glow-white",children:"TechTalk Blog"}),(0,t.jsx)("p",{className:"text-xl text-muted-foreground",children:"Lets talk about trends in IT"})]})}),(0,t.jsxs)("div",{className:"flex flex-col gap-3 mt-8",children:[(0,t.jsxs)("div",{children:[(0,t.jsx)("hr",{}),(null==l?void 0:l.length)>0?(0,t.jsx)("ul",{className:"flex flex-col",children:l.map(e=>{let{slug:n,date:r,title:a,description:i,tags:o}=e;return(0,t.jsx)("li",{children:(0,t.jsx)(u,{slug:n,date:r,title:a,description:i,tags:o})},n)})}):(0,t.jsx)("p",{children:"Nothing to see here yet"})]}),(0,t.jsx)("div",{className:"flex justify-center",children:(0,t.jsx)(C,{totalPages:o,className:"mt-4"})})]})]})})})}k.displayName="PaginationNext"},2381:function(e,n,r){"use strict";r.d(n,{d:function(){return s},z:function(){return c}});var t=r(7437),a=r(2265),i=r(7053),o=r(535),l=r(3448);let s=(0,o.j)("inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50",{variants:{variant:{default:"bg-primary text-primary-foreground hover:bg-primary/90",destructive:"bg-destructive text-destructive-foreground hover:bg-destructive/90",outline:"border border-input bg-background hover:bg-accent hover:text-accent-foreground",secondary:"bg-secondary text-secondary-foreground hover:bg-secondary/80",ghost:"hover:bg-accent hover:text-accent-foreground",link:"text-primary underline-offset-4 hover:underline"},size:{default:"h-10 px-4 py-2",sm:"h-9 rounded-md px-3",lg:"h-11 rounded-md px-8",icon:"h-10 w-10"}},defaultVariants:{variant:"default",size:"default"}}),c=a.forwardRef((e,n)=>{let{className:r,variant:a,size:o,asChild:c=!1,...d}=e,h=c?i.g7:"button";return(0,t.jsx)(h,{className:(0,l.cn)(s({variant:a,size:o,className:r})),ref:n,...d})});c.displayName="Button"},3448:function(e,n,r){"use strict";r.d(n,{O2:function(){return c},cn:function(){return l},p6:function(){return s}});var t=r(1994),a=r(3335),i=r(2258),o=r(7262);function l(){for(var e=arguments.length,n=Array(e),r=0;r<e;r++)n[r]=arguments[r];return(0,a.m6)((0,t.W)(n))}function s(e){let n=(0,i.D)(e);return(0,o.WU)(n,"MMMM d, yyyy")}function c(e){return e.sort((e,n)=>new Date(e.date)>new Date(n.date)?-1:1)}},8575:function(e,n,r){"use strict";r.d(n,{F:function(){return i},e:function(){return o}});var t=r(2265);function a(e,n){if("function"==typeof e)return e(n);null!=e&&(e.current=n)}function i(...e){return n=>{let r=!1,t=e.map(e=>{let t=a(e,n);return r||"function"!=typeof t||(r=!0),t});if(r)return()=>{for(let n=0;n<t.length;n++){let r=t[n];"function"==typeof r?r():a(e[n],null)}}}}function o(...e){return t.useCallback(i(...e),e)}},7053:function(e,n,r){"use strict";r.d(n,{g7:function(){return o}});var t=r(2265),a=r(8575),i=r(7437),o=t.forwardRef((e,n)=>{let{children:r,...a}=e,o=t.Children.toArray(r),s=o.find(c);if(s){let e=s.props.children,r=o.map(n=>n!==s?n:t.Children.count(e)>1?t.Children.only(null):t.isValidElement(e)?e.props.children:null);return(0,i.jsx)(l,{...a,ref:n,children:t.isValidElement(e)?t.cloneElement(e,void 0,r):null})}return(0,i.jsx)(l,{...a,ref:n,children:r})});o.displayName="Slot";var l=t.forwardRef((e,n)=>{let{children:r,...i}=e;if(t.isValidElement(r)){let e,o;let l=(e=Object.getOwnPropertyDescriptor(r.props,"ref")?.get)&&"isReactWarning"in e&&e.isReactWarning?r.ref:(e=Object.getOwnPropertyDescriptor(r,"ref")?.get)&&"isReactWarning"in e&&e.isReactWarning?r.props.ref:r.props.ref||r.ref;return t.cloneElement(r,{...function(e,n){let r={...n};for(let t in n){let a=e[t],i=n[t];/^on[A-Z]/.test(t)?a&&i?r[t]=(...e)=>{i(...e),a(...e)}:a&&(r[t]=a):"style"===t?r[t]={...a,...i}:"className"===t&&(r[t]=[a,i].filter(Boolean).join(" "))}return{...e,...r}}(i,r.props),ref:n?(0,a.F)(n,l):l})}return t.Children.count(r)>1?t.Children.only(null):null});l.displayName="SlotClone";var s=({children:e})=>(0,i.jsx)(i.Fragment,{children:e});function c(e){return t.isValidElement(e)&&e.type===s}},535:function(e,n,r){"use strict";r.d(n,{j:function(){return o}});var t=r(1994);let a=e=>"boolean"==typeof e?`${e}`:0===e?"0":e,i=t.W,o=(e,n)=>r=>{var t;if((null==n?void 0:n.variants)==null)return i(e,null==r?void 0:r.class,null==r?void 0:r.className);let{variants:o,defaultVariants:l}=n,s=Object.keys(o).map(e=>{let n=null==r?void 0:r[e],t=null==l?void 0:l[e];if(null===n)return null;let i=a(n)||a(t);return o[e][i]}),c=r&&Object.entries(r).reduce((e,n)=>{let[r,t]=n;return void 0===t||(e[r]=t),e},{});return i(e,s,null==n?void 0:null===(t=n.compoundVariants)||void 0===t?void 0:t.reduce((e,n)=>{let{class:r,className:t,...a}=n;return Object.entries(a).every(e=>{let[n,r]=e;return Array.isArray(r)?r.includes({...l,...c}[n]):({...l,...c})[n]===r})?[...e,r,t]:e},[]),null==r?void 0:r.class,null==r?void 0:r.className)}}},function(e){e.O(0,[128,648,971,117,744],function(){return e(e.s=2322)}),_N_E=e.O()}]);